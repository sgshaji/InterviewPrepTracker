Title,Body,Labels
🛠️ Remove 'wouter' and consolidate routing with 'react-router-dom',"**Context**
Avoids conflicts, ensures route consistency

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 2.0 hours","priority:P0,complexity:High,day:Day 1"
🛠️ Add schema validation with Zod in updateApplication.ts,"**Context**
Ensures only valid updates are sent to DB

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 2.0 hours","priority:P0,complexity:High,day:Day 1"
🛠️ Add onSuccess(updatedApp) callback to EditApplicationDialog,"**Context**
Keeps UI in sync after editing

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 2.0 hours","priority:P0,complexity:High,day:Day 1"
🛠️ Ensure global error fallback using ErrorBoundary on App level,"**Context**
Prevents app crashes on unhandled exceptions

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 2.0 hours","priority:P0,complexity:High,day:Day 1"
🛠️ Split major pages into React.lazy() chunks with Suspense fallback,"**Context**
Reduces initial bundle size and load time

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 2.0 hours","priority:P0,complexity:High,day:Day 1"
🛠️ Memoize row renderers in virtualized-application-table.tsx,"**Context**
Avoids unnecessary rerenders, improves scroll perf

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.5 hours","priority:P1,complexity:Medium,day:Day 2"
"🛠️ Add loading spinner, error state and empty state UI to virtual table","**Context**
Informs user clearly during fetch states

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.5 hours","priority:P1,complexity:Medium,day:Day 2"
🛠️ Add field-level error messages in EditApplicationDialog,"**Context**
Improves clarity when inputs are invalid

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.5 hours","priority:P1,complexity:Medium,day:Day 2"
🛠️ Disable form inputs and show spinner during API save (isSaving),"**Context**
Prevents data overwrite and improves feedback

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.5 hours","priority:P1,complexity:Medium,day:Day 2"
🛠️ Update parent list optimistically after successful edit,"**Context**
Immediate UI reflection without full reload

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.5 hours","priority:P1,complexity:Medium,day:Day 2"
🛠️ Add console logs on error in updateApplication.ts,"**Context**
Helps debug issues in dev mode quickly

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.5 hours","priority:P1,complexity:Medium,day:Day 2"
🛠️ Convert inline dropdowns to reusable accessible UI component,"**Context**
Improves UX consistency and a11y

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.0 hours","priority:P2,complexity:Low,day:Day 3"
"🛠️ Expose resumeVersion, modeOfApplication, dateApplied in form","**Context**
Enables full editing support

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.0 hours","priority:P2,complexity:Low,day:Day 3"
🛠️ Ensure dropdowns are keyboard navigable and ARIA compliant,"**Context**
Improves accessibility for all users

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.0 hours","priority:P2,complexity:Low,day:Day 3"
🛠️ Add global top-loader bar during network requests,"**Context**
Gives real-time loading indicator across views

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.0 hours","priority:P2,complexity:Low,day:Day 3"
"🛠️ Modularize API, schema, and UI types into /lib or /services","**Context**
Improves code readability and scalability

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.0 hours","priority:P2,complexity:Low,day:Day 3"
"🛠️ Set up client-side error logging (e.g., Sentry or LogRocket)","**Context**
Captures runtime exceptions and improves debugging

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.5 hours","priority:P1,complexity:Medium,day:Day 3"
🛠️ Enable Supabase query logs and slow query alerts,"**Context**
Identifies backend latency and database bottlenecks

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.5 hours","priority:P1,complexity:Medium,day:Day 3"
"🛠️ Add GitHub Actions workflow for test, lint, and preview deploy","**Context**
Automates quality checks and safe deploys

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.5 hours","priority:P1,complexity:Medium,day:Day 3"
🛠️ Remove Wouter and fully migrate to react-router-dom,"**Context**
Avoids routing conflicts and aligns with ecosystem best practices

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 2.0 hours","priority:P0,complexity:High,day:Day 1"
🛠️ Wrap app in Suspense fallback UI using react-query's useIsFetching for loading,"**Context**
Improves feedback during async page transitions

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 2.0 hours","priority:P0,complexity:High,day:Day 1"
🛠️ Use React.lazy() and Suspense to dynamically import pages,"**Context**
Reduces first-load bundle size, improves perceived performance

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.5 hours","priority:P1,complexity:Medium,day:Day 2"
🛠️ Memoize row renderer in virtualized-application-table using React.memo,"**Context**
Prevents re-renders, improves scroll smoothness

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.5 hours","priority:P1,complexity:Medium,day:Day 2"
"🛠️ Add empty state, loading more, and error fetch states in table UI","**Context**
Keeps users informed during async fetch or edge cases

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.5 hours","priority:P1,complexity:Medium,day:Day 2"
🛠️ Refactor inline dropdowns into a reusable accessible dropdown component,"**Context**
Removes duplication and improves accessibility

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.0 hours","priority:P2,complexity:Low,day:Day 3"
🛠️ Add onSuccess(updatedApp) callback to sync state after saving,"**Context**
Keeps parent list in sync immediately after edit

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 2.0 hours","priority:P0,complexity:High,day:Day 1"
🛠️ Add field-level error indicators and validations with Zod or react-hook-form,"**Context**
Provides clear input feedback, reduces input errors

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.5 hours","priority:P1,complexity:Medium,day:Day 2"
🛠️ Disable inputs and show spinner during isSaving,"**Context**
Prevents data loss or overwrite during async updates

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.5 hours","priority:P1,complexity:Medium,day:Day 2"
"🛠️ Expose resumeVersion, modeOfApplication, dateApplied in dialog","**Context**
Enables full application editing

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.0 hours","priority:P2,complexity:Low,day:Day 3"
🛠️ Validate application update input with schema before sending to Supabase,"**Context**
Prevents malformed or unsafe data operations

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 2.0 hours","priority:P0,complexity:High,day:Day 1"
🛠️ Log API updateApplication errors to console,"**Context**
Improves dev debugging

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.5 hours","priority:P1,complexity:Medium,day:Day 2"
🛠️ Add Sentry or LogRocket to capture runtime errors,"**Context**
Helps detect and fix production issues

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.0 hours","priority:P2,complexity:Low,day:Day 3"
🛠️ Use queryClient.invalidateQueries or setQueryData after successful update,"**Context**
Keeps UI state aligned without full reload

**Acceptance Criteria**
- [ ] Task is implemented as described
- [ ] Code is reviewed and tested
- [ ] Feature is verified in staging environment

**Estimated Time**: 1.0 hours","priority:P2,complexity:Low,day:Day 3"
